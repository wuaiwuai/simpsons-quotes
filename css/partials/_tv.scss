
/* Colors */
$tv-color-base: #7055a7;
$tv-color-box: #3e4494;
$tv-color-parts-base: #526c8e;
$tv-color-rim: #27255f;
$tv-color-parts: #6e8ff1;

/* TV Variables */
$size: 300px;
$rect: 0.7;
$tv-frame: 20px;
$outline: darken($tv-color-base, 35%);

/* Mixins */
@mixin vendor-prefix($name, $argument) {
  -webkit-#{$name}: #{$argument};
  -ms-#{$name}: #{$argument};
  -moz-#{$name}: #{$argument};
  -o-#{$name}: #{$argument};
  #{$name}: #{$argument};
}

$x: -10px;
$y: 20px;

$x-deg: -10deg;
$y-deg: 20deg;

// @-moz-keyframes spin {
// 	0% 		{ -moz-transform:  rotateX($x) rotateY(-$y) }
// 	50% 	{ -moz-transform:  rotateX($x) rotateY($y) }
// 	100% 	{ -moz-transform:  rotateX($x) rotateY(-$y) }
// }
// @-webkit-keyframes spin {
// 	0% 		{ -webkit-transform:  rotateX($x) rotateY(-$y); }
// 	50% 	{ -webkit-transform:  rotateX($x) rotateY($y); }
// 	100% 	{ -webkit-transform:  rotateX($x) rotateY(-$y); }
// }
// @keyframes spin {
// 	0%   { -webkit-transform: rotateX($x) rotateY(-$y);
// 				   transform: rotateX($x) rotateY(-$y); }
// 	50%  { -webkit-transform: rotateX($x) rotateY($y);
// 				   transform: rotateX($x) rotateY($y); }
// 	100% { -webkit-transform: rotateX($x) rotateY(-$y);
// 				   transform: rotateX($x) rotateY(-$y); }
// }

@-webkit-keyframes hover {
	0% 		{ -webkit-transform:  rotateX($x-deg) rotateY($y-deg) translateY(-$y); }
	50% 	{ -webkit-transform:  rotateX(-$x-deg/2) rotateY($y-deg) translateY($y); }
	100% 	{ -webkit-transform:  rotateX($x-deg) rotateY($y-deg) translateY(-$y); }
}

#tv-scene {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	margin: auto;
	width: $size;
	height: $size;
	@include vendor-prefix(perspective, 2000px);
	// background-color: brown;

	// @include vendor-prefix(transform, scale(1.5));
}

#tv {
	background-color: blue;
	height: $size*$rect;
	width: $size;
	display: block;
	position: relative;
	@include vendor-prefix(transform-style, preserve-3d);
	
	// @include vendor-prefix(transform, rotateX(15deg) rotateY(15deg));
	
	@include vendor-prefix(transform, rotateX($x-deg) rotateY(-$y-deg));
	// @include vendor-prefix(animation, hover 4s ease-in-out infinite);
}
.tv-side {
	width: inherit;
	height: inherit;
	position: absolute;
	// background: red;
	// opacity: 0.45;
	background-color: darken($tv-color-base, 10%);
	box-sizing: border-box;
	border: 2px solid $outline;
}
$line-rotation: 50deg;
.tv-side.screen-rim {
	position: absolute;
	background-color: $tv-color-rim;
	height: ($size*$rect) - ($tv-frame * 2);
	width: $size - ($tv-frame * 3.5);
	top: $tv-frame;
	left: $tv-frame;
	border: 2px solid $outline;
	overflow: hidden;

	@include vendor-prefix(transform, translate3d(0, 0, ($size*$rect/2)+1));
	@include border-radius(4px);
	.screen-rim-line {
		position: absolute;
		background-color: $outline;
		border: none;
		width: 2px;
		height: 80px;
		&:nth-child(1) {
			top: 0;
			left: 0;
			@include vendor-prefix(transform-origin, 50% 0%);
			@include vendor-prefix(transform, rotate(-#{$line-rotation}));
		}
		&:nth-child(2) {
			top: 0;
			right: 0;
			@include vendor-prefix(transform-origin, 50% 0%);
			@include vendor-prefix(transform, rotate($line-rotation));
		}
		&:nth-child(3) {
			bottom: 0;
			left: 0;
			@include vendor-prefix(transform-origin, 50% 100%);
			@include vendor-prefix(transform, rotate($line-rotation));
		}
		&:nth-child(4) {
			bottom: 0;
			right: 0;
			@include vendor-prefix(transform-origin, 50% 100%);
			@include vendor-prefix(transform, rotate(-#{$line-rotation}));
		}
	}
	.screen {
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;

		background: #0a0a0a;
		// background-image: url('../img/default.png');
		-webkit-background-size: cover;
		-moz-background-size: cover;
		-o-background-size: cover;
		background-size: cover;
		background-repeat: no-repeat;
		background-position: center center;

		border: 2px solid $outline;
		width: 90%;
		height: 90%;
		margin: auto;
		// background-color: red;
		@include vendor-prefix(border-radius, #{10%}/#{10%});
	}
}
.tv-side.front {
	// background: yellow;
	background-color: $tv-color-base;
	height: $size*$rect;
	@include vendor-prefix(transform-style, preserve-3d);
	@include vendor-prefix(transform, translate3d(0, 0, $size*$rect/2));
	&:after {
		content: "";
		display: block;
		height: inherit;
		width: inherit;
	}
}
.tv-side .dial {
	position: relative;
	@include vendor-prefix(transform-style, preserve-3d);
	.dial-layer {
		-webkit-backface-visibility: hidden;
		position: absolute;
		top: 30px;
		right: 12px;
		background-color: $tv-color-parts-base;
		width: 24px;
		height: 24px;
		box-sizing: border-box;
		border: 2px solid $outline;
		@include border-radius(20px);
		&:nth-child(1) {
			background-color: $outline;
			@include vendor-prefix(transform, translate3d(0, 0, 2px)) // bump first layer to handle chrome flicker
		}
		&:nth-child(2) {
			background-color: $outline;
			@include vendor-prefix(transform, translate3d(0, 0, 2px))
		}
		&:nth-child(3) {
			background-color: $outline;
			@include vendor-prefix(transform, translate3d(0, 0, 4px))
		}
		&:nth-child(4) {
			background-color: $outline;
			@include vendor-prefix(transform, translate3d(0, 0, 6px))
		}
		&:nth-child(5) {
			@include vendor-prefix(transform, translate3d(0, 0, 8px))
		}
	}
	.nub {
		position: absolute;
		top: 30px;
		right: 12px;
		width: 24px;
		height: 24px;
		@include vendor-prefix(transform-style, preserve-3d);
		transform: rotate(45deg) translate3d(0, 0, 10px); // rotate this janks for animation
		.nub-layer {
			position: absolute;
			top: 1px;
			right: 0;
			left: 0;
			margin-left: auto;
			margin-right: auto;
			background-color: $tv-color-parts;
			width: 6px;
			height: 22px;
			border: 1px solid $outline;
			&:nth-child(2) {
				@include vendor-prefix(transform, translate3d(0, 0, 1px));
			}
			&:nth-child(3) {
				@include vendor-prefix(transform, translate3d(0, 0, 2px));
			}
		}
	}
	&:nth-child(2) {
		top: 36px;
		.nub {
			@include vendor-prefix(transform, rotate(-15deg) translate3d(0, 0, 10px)); // rotate this janks for animation
		}
	}
}
.tv-side .panel {
	position: absolute;
	top: 106px;
	right: 12px;
	background-color: $tv-color-parts;
	width: 24px;
	height: 66px;
	box-sizing: border-box;
	border: 2px solid $outline;
	text-align: center;
	font-size: 0;
	@include vendor-prefix(transform, translate3d(0, 0, 1px));
	.panel-lines {
		width: 1px;
		height: 90%;
		background-color: $outline;
		display: inline-block;
		margin: 15% 2px;
	}
}
.tv-side.back {
	// background: orange;
	height: $size*$rect;
	background-color: darken($tv-color-base, 10%);
	@include vendor-prefix(transform, rotateY(180deg) translate3d(0, 0, $size*$rect/2));
}
.tv-side.left {
	// background: green;
	height: $size*$rect;
	width: $size*$rect;
	@include vendor-prefix(transform, rotateY(-90deg) translate3d(0, 0, ($size*$rect/2)));
}
.tv-side.right {
	// background: magenta;
	height: $size*$rect;
	width: $size*$rect;
	@include vendor-prefix(transform, rotateY(90deg) translate3d(0, 0, ($size*$rect - 15px)));
}
.tv-side.top {
	// background: cyan;
	@include vendor-prefix(transform, rotateX(90deg) translate3d(0, 0, ($size*$rect/2)));
}
$cable-box-height: 30px;
.tv-side.cable-box {
	// background: cyan;
	position: absolute;
	@include vendor-prefix(transform-style, preserve-3d);
	@include vendor-prefix(transform, rotateX(90deg) translate3d(0, 0, ($size*$rect/2)));
	.cable-box-side {
		position: absolute;
		left: 15%;
		bottom: 10%;
		box-sizing: border-box;
		border: 2px solid $outline;
		background-color: darken($tv-color-box, 10%);
		// opacity: 0.5;
	}
	.cable-box-side.top {
		// background: red;
		height: ($size*$rect)/2;
		width: ($size)/2;
		@include vendor-prefix(transform-style, preserve-3d);
		@include vendor-prefix(transform, translate3d(0, 0, $cable-box-height));
		.antenna {
			position: absolute;
			left: 0;
			right: 0;
			margin: auto;
			width: 20px;
			@include vendor-prefix(transform-origin, 0% 100%);
			object {
				max-height: 100%;
			}
			&:after {
					content: '';
					width: 14px;
					height: 14px;
					background-color: $tv-color-parts;
					border: 2px solid $outline;
					position: absolute;
					top: 0;
					left: 0;
					right: 0;
					margin-left: -7px;
					margin-top: -7px;
					@include border-radius(20px);
				}
			&:nth-child(1) {
				height: $cable-box-height*5;
				@include vendor-prefix(transform, rotateX(-90deg) rotate(-45deg) translate3d(0, -2px, -106px));
			}
			&:nth-child(2) {
				height: $cable-box-height*5;
				@include vendor-prefix(transform, rotateX(-90deg) rotate(35deg) translate3d(0, -2px, -106px));
			}
		}
		.antenna-base {
			position: absolute;
			left: 20%;
			top: 20%;
			box-sizing: border-box;
			// border: 2px solid red;
			height: $cable-box-height*2;
			width: $cable-box-height*2;
			@include vendor-prefix(transform-style, preserve-3d);
			@include vendor-prefix(transform, translate3d(0, 0, 1px));
		}
		.antenna-sphere {
			position: absolute;
			top: 0;
			bottom: 0;
			left: 0;
			right: 0;
			margin: auto;
			overflow: hidden;
			height: $cable-box-height;
			width: $cable-box-height*2;
			// background-color: darken($tv-color-box, 5%);
			@include vendor-prefix(transform-origin, 0% 100%);
			// the center
			// @include vendor-prefix(transform, rotateX(-90deg) translate3d(0, 0, #{$cable-box-height/2}));
			@for $i from 1 through 15 {
				&:nth-child(#{$i}) {
					// border: 1px solid green;
					@include vendor-prefix(transform, rotateX(-90deg) translate3d(0, 0, #{$cable-box-height/2 - $i*1}));
					&:after {
						content: '';
						position: absolute;
						bottom: 0;
						left: 0;
						right: 0;
						margin-left: auto;
						margin-right: auto;
						height: #{$i*2}px;
						width: #{$i*4}px;
						background-color: darken($tv-color-box, 5%);
						-webkit-border-top-left-radius: $cable-box-height;
						-webkit-border-top-right-radius: $cable-box-height;
						-moz-border-radius-topleft: $cable-box-height;
						-moz-border-radius-topright: $cable-box-height;
						border-top-left-radius: $cable-box-height;
						border-top-right-radius: $cable-box-height;
					}
				}
			}
			$count: 1;
			@while $count < 16 {
				&:nth-child(#{15+$count}) {
					// border: 1px solid green;
					@include vendor-prefix(transform, rotateX(-90deg) translate3d(0, 0, -#{$count*1}px));
					&:after {
						content: '';
						position: absolute;
						bottom: 0;
						left: 0;
						right: 0;
						margin-left: auto;
						margin-right: auto;
						height: #{30 - $count*2}px;
						width: #{60 - $count*4}px;
						background-color: darken($tv-color-box, 5%);
						-webkit-border-top-left-radius: $cable-box-height;
						-webkit-border-top-right-radius: $cable-box-height;
						-moz-border-radius-topleft: $cable-box-height;
						-moz-border-radius-topright: $cable-box-height;
						border-top-left-radius: $cable-box-height;
						border-top-right-radius: $cable-box-height;
					}
				}
				$count: $count + 1;
			}
		}
	}
	.cable-box-side.left {
		// background: orange;
		height: ($size*$rect)/2;
		width: $cable-box-height;
		@include vendor-prefix(transform-origin, 0% 0%);
		@include vendor-prefix(transform, rotateY(-90deg) translate3d(0, 0, 0));
	}
	.cable-box-side.right {
		// background: orange;
		height: ($size*$rect)/2;
		width: $cable-box-height;
		@include vendor-prefix(transform-origin, 0% 0%);
		@include vendor-prefix(transform, rotateY(-90deg) translate3d(0, 0, -($size/2)));
	}
	.cable-box-side.front {
		// background: orange;
		background-color: $tv-color-box;
		height: $cable-box-height;
		width: ($size)/2;
		@include vendor-prefix(transform-origin, 0% 100%);
		@include vendor-prefix(transform, rotateX(-90deg) translate3d(0, 0, 0));
		.cable-box-bar {
			position: absolute;
			top: 50%;
			left: 20px;
			margin-top: -5px;
			background-color: $tv-color-parts;
			box-sizing: border-box;
			border: 2px solid $outline;
			height: 10px;
			width: 60px;
		}
		.cable-box-circle {
			position: absolute;
			top: 50%;
			left: 100px;
			margin-top: -5px;
			background-color: $tv-color-parts;
			box-sizing: border-box;
			width: 10px;
			height: 10px;
			border: 2px solid $outline;
			@include border-radius(10px);
			&:nth-child(2) {
				left: 120px;
			}
		}
	}
	.cable-box-side.back {
		// background: green;
		height: $cable-box-height;
		width: ($size)/2;
		@include vendor-prefix(transform-origin, 0% 100%);
		@include vendor-prefix(transform, rotateX(-90deg) translate3d(0, 0, -($size*$rect/2)));
	}
}
$feet-width: 20px;
.tv-side.bottom {
	// background: red;
	@include vendor-prefix(transform-style, preserve-3d);
	@include vendor-prefix(transform, rotateX(-90deg) translate3d(0, 0, ($size*$rect/2)));
	.tv-feet {
		position: absolute;
		// background-color: green;
		height: $feet-width;
		width: $feet-width;
		@include vendor-prefix(transform-style, preserve-3d);
		// @include vendor-prefix(transform, translate3d(0, 0, 1px));
		.tv-feet-side {
			position: absolute;
			height: $feet-width;
			width: $feet-width;
			background-color: $tv-color-rim;
			box-sizing: border-box;
			border: 2px solid $outline;
			&.front {
				// background-color: green;
				@include vendor-prefix(transform-origin, 100% 0%);
				@include vendor-prefix(transform, rotateX(90deg) translate3d(0, 0, 0));
			}
			&.back {
				// background-color: yellow;
				@include vendor-prefix(transform-origin, 0% 100%);
				@include vendor-prefix(transform, rotateX(-90deg) translate3d(0, 0, 0));
			}
			&.left {
				// background-color: red;
				@include vendor-prefix(transform-origin, 0% 100%);
				@include vendor-prefix(transform, rotateY(-90deg) translate3d(0, 0, 0));
			}
			&.right {
				// background-color: blue;
				@include vendor-prefix(transform-origin, 100% 0%);
				@include vendor-prefix(transform, rotateY(90deg) translate3d(0, 0, 0));
			}
			&.bottom {
				// background-color: blue;
				@include vendor-prefix(transform, translate3d(0, 0, $feet-width));
			}
		}
		&:nth-child(1) {
			left: 5%;
			top: 5%;
		}
		&:nth-child(2) {
			right: 5%;
			top: 5%;
		}
		&:nth-child(3) {
			left: 5%;
			bottom: 5%;
		}
		&:nth-child(4) {
			right: 5%;
			bottom: 5%;
		}
	}
}



.tv-anim {
  -webkit-animation: animation 1000ms linear both;
  animation: animation 1000ms linear both;
}

/* Generated with Bounce.js. Edit at http://goo.gl/Z3s5Is */

@-webkit-keyframes animation { 
  0% { -webkit-transform: matrix3d(0, 0.5, 0, 0, -0.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0.5, 0, 0, -0.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  3.333333% { -webkit-transform: matrix3d(0.62681, 0.88801, 0, 0, -0.88801, 0.62681, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.62681, 0.88801, 0, 0, -0.88801, 0.62681, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  6.666667% { -webkit-transform: matrix3d(1.3882, 0.6993, 0, 0, -0.6993, 1.3882, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.3882, 0.6993, 0, 0, -0.6993, 1.3882, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  10% { -webkit-transform: matrix3d(1.84371, 0.26658, 0, 0, -0.26658, 1.84371, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.84371, 0.26658, 0, 0, -0.26658, 1.84371, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  13.333333% { -webkit-transform: matrix3d(2.02984, -0.06572, 0, 0, 0.06572, 2.02984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.02984, -0.06572, 0, 0, 0.06572, 2.02984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  16.666667% { -webkit-transform: matrix3d(2.08735, -0.21608, 0, 0, 0.21608, 2.08735, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.08735, -0.21608, 0, 0, 0.21608, 2.08735, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  20% { -webkit-transform: matrix3d(2.09319, -0.23374, 0, 0, 0.23374, 2.09319, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.09319, -0.23374, 0, 0, 0.23374, 2.09319, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  23.333333% { -webkit-transform: matrix3d(2.07719, -0.18659, 0, 0, 0.18659, 2.07719, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.07719, -0.18659, 0, 0, 0.18659, 2.07719, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  26.666667% { -webkit-transform: matrix3d(2.05334, -0.12272, 0, 0, 0.12272, 2.05334, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.05334, -0.12272, 0, 0, 0.12272, 2.05334, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  30% { -webkit-transform: matrix3d(2.03032, -0.06682, 0, 0, 0.06682, 2.03032, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.03032, -0.06682, 0, 0, 0.06682, 2.03032, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  33.333333% { -webkit-transform: matrix3d(2.01275, -0.02727, 0, 0, 0.02727, 2.01275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.01275, -0.02727, 0, 0, 0.02727, 2.01275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  36.666667% { -webkit-transform: matrix3d(2.0018, -0.00378, 0, 0, 0.00378, 2.0018, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.0018, -0.00378, 0, 0, 0.00378, 2.0018, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  40% { -webkit-transform: matrix3d(1.99644, 0.00742, 0, 0, -0.00742, 1.99644, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99644, 0.00742, 0, 0, -0.00742, 1.99644, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  43.333333% { -webkit-transform: matrix3d(1.99485, 0.0107, 0, 0, -0.0107, 1.99485, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99485, 0.0107, 0, 0, -0.0107, 1.99485, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  46.666667% { -webkit-transform: matrix3d(1.99532, 0.00973, 0, 0, -0.00973, 1.99532, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99532, 0.00973, 0, 0, -0.00973, 1.99532, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  50% { -webkit-transform: matrix3d(1.99659, 0.0071, 0, 0, -0.0071, 1.99659, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99659, 0.0071, 0, 0, -0.0071, 1.99659, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  53.333333% { -webkit-transform: matrix3d(1.99793, 0.00433, 0, 0, -0.00433, 1.99793, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99793, 0.00433, 0, 0, -0.00433, 1.99793, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  56.666667% { -webkit-transform: matrix3d(1.99899, 0.00211, 0, 0, -0.00211, 1.99899, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99899, 0.00211, 0, 0, -0.00211, 1.99899, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  60% { -webkit-transform: matrix3d(1.99969, 0.00065, 0, 0, -0.00065, 1.99969, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99969, 0.00065, 0, 0, -0.00065, 1.99969, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  63.333333% { -webkit-transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  66.666667% { -webkit-transform: matrix3d(2.00022, -0.00047, 0, 0, 0.00047, 2.00022, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00022, -0.00047, 0, 0, 0.00047, 2.00022, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  70% { -webkit-transform: matrix3d(2.00024, -0.0005, 0, 0, 0.0005, 2.00024, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00024, -0.0005, 0, 0, 0.0005, 2.00024, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  73.333333% { -webkit-transform: matrix3d(2.00019, -0.00041, 0, 0, 0.00041, 2.00019, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00019, -0.00041, 0, 0, 0.00041, 2.00019, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  76.666667% { -webkit-transform: matrix3d(2.00013, -0.00027, 0, 0, 0.00027, 2.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00013, -0.00027, 0, 0, 0.00027, 2.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  80% { -webkit-transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  83.333333% { -webkit-transform: matrix3d(2.00003, -0.00006, 0, 0, 0.00006, 2.00003, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00003, -0.00006, 0, 0, 0.00006, 2.00003, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  86.666667% { -webkit-transform: matrix3d(2, -0.00001, 0, 0, 0.00001, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2, -0.00001, 0, 0, 0.00001, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  90% { -webkit-transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  93.333333% { -webkit-transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  96.666667% { -webkit-transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  100% { -webkit-transform: matrix3d(2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } 
}

@keyframes animation { 
  0% { -webkit-transform: matrix3d(0, 0.5, 0, 0, -0.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0.5, 0, 0, -0.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  3.333333% { -webkit-transform: matrix3d(0.62681, 0.88801, 0, 0, -0.88801, 0.62681, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.62681, 0.88801, 0, 0, -0.88801, 0.62681, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  6.666667% { -webkit-transform: matrix3d(1.3882, 0.6993, 0, 0, -0.6993, 1.3882, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.3882, 0.6993, 0, 0, -0.6993, 1.3882, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  10% { -webkit-transform: matrix3d(1.84371, 0.26658, 0, 0, -0.26658, 1.84371, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.84371, 0.26658, 0, 0, -0.26658, 1.84371, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  13.333333% { -webkit-transform: matrix3d(2.02984, -0.06572, 0, 0, 0.06572, 2.02984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.02984, -0.06572, 0, 0, 0.06572, 2.02984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  16.666667% { -webkit-transform: matrix3d(2.08735, -0.21608, 0, 0, 0.21608, 2.08735, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.08735, -0.21608, 0, 0, 0.21608, 2.08735, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  20% { -webkit-transform: matrix3d(2.09319, -0.23374, 0, 0, 0.23374, 2.09319, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.09319, -0.23374, 0, 0, 0.23374, 2.09319, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  23.333333% { -webkit-transform: matrix3d(2.07719, -0.18659, 0, 0, 0.18659, 2.07719, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.07719, -0.18659, 0, 0, 0.18659, 2.07719, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  26.666667% { -webkit-transform: matrix3d(2.05334, -0.12272, 0, 0, 0.12272, 2.05334, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.05334, -0.12272, 0, 0, 0.12272, 2.05334, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  30% { -webkit-transform: matrix3d(2.03032, -0.06682, 0, 0, 0.06682, 2.03032, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.03032, -0.06682, 0, 0, 0.06682, 2.03032, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  33.333333% { -webkit-transform: matrix3d(2.01275, -0.02727, 0, 0, 0.02727, 2.01275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.01275, -0.02727, 0, 0, 0.02727, 2.01275, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  36.666667% { -webkit-transform: matrix3d(2.0018, -0.00378, 0, 0, 0.00378, 2.0018, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.0018, -0.00378, 0, 0, 0.00378, 2.0018, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  40% { -webkit-transform: matrix3d(1.99644, 0.00742, 0, 0, -0.00742, 1.99644, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99644, 0.00742, 0, 0, -0.00742, 1.99644, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  43.333333% { -webkit-transform: matrix3d(1.99485, 0.0107, 0, 0, -0.0107, 1.99485, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99485, 0.0107, 0, 0, -0.0107, 1.99485, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  46.666667% { -webkit-transform: matrix3d(1.99532, 0.00973, 0, 0, -0.00973, 1.99532, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99532, 0.00973, 0, 0, -0.00973, 1.99532, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  50% { -webkit-transform: matrix3d(1.99659, 0.0071, 0, 0, -0.0071, 1.99659, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99659, 0.0071, 0, 0, -0.0071, 1.99659, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  53.333333% { -webkit-transform: matrix3d(1.99793, 0.00433, 0, 0, -0.00433, 1.99793, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99793, 0.00433, 0, 0, -0.00433, 1.99793, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  56.666667% { -webkit-transform: matrix3d(1.99899, 0.00211, 0, 0, -0.00211, 1.99899, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99899, 0.00211, 0, 0, -0.00211, 1.99899, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  60% { -webkit-transform: matrix3d(1.99969, 0.00065, 0, 0, -0.00065, 1.99969, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99969, 0.00065, 0, 0, -0.00065, 1.99969, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  63.333333% { -webkit-transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  66.666667% { -webkit-transform: matrix3d(2.00022, -0.00047, 0, 0, 0.00047, 2.00022, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00022, -0.00047, 0, 0, 0.00047, 2.00022, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  70% { -webkit-transform: matrix3d(2.00024, -0.0005, 0, 0, 0.0005, 2.00024, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00024, -0.0005, 0, 0, 0.0005, 2.00024, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  73.333333% { -webkit-transform: matrix3d(2.00019, -0.00041, 0, 0, 0.00041, 2.00019, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00019, -0.00041, 0, 0, 0.00041, 2.00019, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  76.666667% { -webkit-transform: matrix3d(2.00013, -0.00027, 0, 0, 0.00027, 2.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00013, -0.00027, 0, 0, 0.00027, 2.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  80% { -webkit-transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00007, -0.00015, 0, 0, 0.00015, 2.00007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  83.333333% { -webkit-transform: matrix3d(2.00003, -0.00006, 0, 0, 0.00006, 2.00003, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2.00003, -0.00006, 0, 0, 0.00006, 2.00003, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  86.666667% { -webkit-transform: matrix3d(2, -0.00001, 0, 0, 0.00001, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2, -0.00001, 0, 0, 0.00001, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  90% { -webkit-transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  93.333333% { -webkit-transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  96.666667% { -webkit-transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.99999, 0.00002, 0, 0, -0.00002, 1.99999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  100% { -webkit-transform: matrix3d(2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } 
}





