
/* Colors */
$tv-color-base: #605489;
$tv-color-box: #2f3858;
$tv-color-wires: #242768;

/* TV Variables */
$size: 300px;
$rect: 0.7;
$tv-frame: 20px;
$outline: darken($tv-color-base, 30%);

@-moz-keyframes spin { 100% { -moz-transform:  rotateX(-15deg) rotateY(60deg); } }
@-webkit-keyframes spin { 100% { -webkit-transform:  rotateX(-15deg) rotateY(60deg); } }
@keyframes spin { 100% { -webkit-transform:  rotateX(-15deg) rotateY(60deg); transform: rotateX(-15deg) rotateY(60deg); } }

#tv-scene {
	margin: 0 auto;
	margin-top: 10%;
	width: $size;
	height: $size;
	perspective: 2000px;
	// background-color: brown;
}

#tv {
	background-color: blue;
	height: $size*$rect;
	width: $size;
	display: block;
	transform-style: preserve-3d;
	-webkit-transform-style: preserve-3d;
	position: relative;
	
	// transform: rotateX(-15deg) rotateY(15deg);
	
	transform: rotateX(-15deg) rotateY(0deg);
	-webkit-animation:spin 4s linear infinite;
	-moz-animation:spin 4s linear infinite;
	animation:spin 4s linear infinite;
}
.tv-side {
	width: inherit;
	height: inherit;
	position: absolute;
	// background: red;
	// opacity: 0.45;
	background-color: $tv-color-base;
	box-sizing: border-box;
	border: 2px solid $outline;
}
.tv-side.screen {
	background: yellow;
	transform: translate3d(0, 0, ($size*$rect/2)+1);
	background-image: url('../img/default.png');
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center center;
	height: ($size*$rect) - ($tv-frame * 2);
	width: $size - ($tv-frame * 3.5);
	top: $tv-frame;
	left: $tv-frame;
	@include border-radius(4px);
}
.tv-side.front {
	// background: yellow;
	transform-style: preserve-3d;
	-webkit-transform-style: preserve-3d;
	background: lighten($tv-color-base, 10%);
	transform: translate3d(0, 0, $size*$rect/2);
	height: $size*$rect;
	&:after {
		content: "";
		display: block;
		height: inherit;
		width: inherit;
	}
}
.tv-side .dial {
	position: relative;
	transform-style: preserve-3d;
	-webkit-transform-style: preserve-3d;
	.dial-layer {
		-webkit-backface-visibility: hidden;
		position: absolute;
		top: 30px;
		right: 12px;
		background-color: $tv-color-box;
		width: 24px;
		height: 24px;
		box-sizing: border-box;
		border: 2px solid $outline;
		@include border-radius(20px);
		&:nth-child(1) {
			transform: translate3d(0, 0, 2px); // bump first layer to handle chrome flicker
		}
		&:nth-child(2) {
			transform: translate3d(0, 0, 2px);
		}
		&:nth-child(3) {
			transform: translate3d(0, 0, 4px);
		}
		&:nth-child(4) {
			transform: translate3d(0, 0, 6px);
		}
		&:nth-child(5) {
			transform: translate3d(0, 0, 8px);
		}
	}
	.nub {
		position: absolute;
		top: 30px;
		right: 12px;
		width: 24px;
		height: 24px;
		transform-style: preserve-3d;
		-webkit-transform-style: preserve-3d;
		transform: rotate(45deg) translate3d(0, 0, 10px); // rotate this janks for animation
		.nub-layer {
			position: absolute;
			top: 1px;
			right: 0;
			left: 0;
			margin-left: auto;
			margin-right: auto;
			background-color: $tv-color-box;
			width: 6px;
			height: 22px;
			border: 1px solid $outline;
			&:nth-child(2) {
				transform: translate3d(0, 0, 1px);
			}
			&:nth-child(3) {
				transform: translate3d(0, 0, 2px);
			}
		}
	}
	&:nth-child(2) {
		top: 36px;
		.nub {
			transform: rotate(-15deg) translate3d(0, 0, 10px); // rotate this janks for animation
		}
	}
}
.tv-side .panel {
	position: absolute;
	top: 106px;
	right: 12px;
	background-color: $tv-color-box;
	width: 24px;
	height: 56px;
	box-sizing: border-box;
	border: 2px solid $outline;
}
.tv-side.back {
	// background: orange;
	transform: rotateY(180deg) translate3d(0, 0, $size*$rect/2);
	height: $size*$rect;
	background-color: darken($tv-color-base, 10%);
}
.tv-side.left {
	// background: green;
	transform: rotateY(-90deg) translate3d(0, 0, ($size*$rect/2));
	height: $size*$rect;
	width: $size*$rect;
}
.tv-side.right {
	// background: magenta;
	transform: rotateY(90deg) translate3d(0, 0, ($size*$rect - 15px));
	height: $size*$rect;
	width: $size*$rect;
}
.tv-side.top {
	// background: cyan;
	transform: rotateX(90deg) translate3d(0, 0, ($size*$rect/2));
}
.tv-side.bottom {
	// background: red;
	transform: rotateX(-90deg) translate3d(0, 0, ($size*$rect/2));
}

